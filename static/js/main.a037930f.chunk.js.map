{"version":3,"sources":["utilities/API.js","components/Container.js","components/Hero.js","components/Results.js","components/DirectoryPage.js","App.js","index.js"],"names":["axios","get","Container","props","className","fluid","children","styles","hero","background","minHeight","fontSize","color","padding","Hero","style","type","name","onChange","handleInput","placeholder","Results","src","image","alt","first","last","email","phone","location","Directory","state","employees","search","filteredEmployees","isSorted","event","setState","target","value","filtered","filter","employee","toLowerCase","indexOf","handleSortFirst","compareAZ","a","b","sort","handleSortLast","lastA","lastB","comparison","handleSortLocation","locA","locB","API","then","res","console","log","data","results","filterEmployees","catch","err","employeeInfo","this","map","i","key","picture","thumbnail","onClick","scope","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a037930f.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Export a method that gets employees from the User API\nexport default {\n  getEmployees() {\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\n  }\n};","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nconst styles = {\n  hero: {\n    background: \"#3f51b5\",\n    minHeight: 50,\n    fontSize: \"1.2rem\",\n    color: \"white\",\n    padding: \"50px 20px\"  }\n}\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={styles.hero}>\n      <h1>Employee Directory</h1>\n      <form className=\"search\">\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            name=\"search\"\n            onChange={props.handleInput}\n            placeholder=\"Search by name\"\n            />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React from \"react\";\r\n\r\nfunction Results(props) {\r\n  return(\r\n    <tbody>\r\n      <tr>\r\n        <td><img src={props.image} alt={props.first}></img></td>\r\n        <td>{props.first}</td>\r\n        <td>{props.last}</td>\r\n        <td>{props.email}</td>\r\n        <td>{props.phone}</td>\r\n        <td>{props.location}</td>\r\n      </tr>\r\n    </tbody>\r\n    );\r\n}\r\n\r\nexport default Results;","import React, { Component } from \"react\";\nimport API from \"../utilities/API\";\nimport Container from \"./Container\";\nimport Hero from \"./Hero\";\nimport Results from \"./Results\";\n\nclass Directory extends Component{\n  //inititalize state\n  state = {\n    employees: [],\n    search: \"\",\n    filteredEmployees: [],\n    isSorted: false\n  }\n\n  //gets data from API when the page loads\n  componentDidMount() {\n    API.getEmployees()\n      .then(res => {\n        console.log(res);\n        this.setState({ \n          employees: res.data.results, \n          filteredEmployees: res.data.results \n        });\n        this.filterEmployees();\n      })\n      .catch(err => console.log(err));\n  }\n\n  // input change in search bar\n  handleInput = (event) => {\n    this.setState({ search: event.target.value });\n    //Use the filter method to filter employees according to what user types in \n    const filtered = this.state.employees.filter((employee) => {\n        return (employee.name.first.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1);\n    })\n    // Set the state of filterEmployees \n    this.setState({ filteredEmployees: filtered })\n}\n\n  // Declare a function that handle the sort by first name\n  handleSortFirst = () => {\n    //sort A-Z\n    function compareAZ(a, b) {\n      const firstA = a.name.first.toLowerCase();\n      const firstB = b.name.first.toLowerCase();\n      let comparison = 0;\n      if (firstA > firstB) {\n        comparison = 1;\n      } else {\n        comparison = -1;\n      }\n      return comparison;\n    }\n    //sortZ-A\n    function compareZA(a, b) {\n      const firstA = a.name.first.toLowerCase();\n      const firstB = b.name.first.toLowerCase();\n      let comparison = 0;\n      if (firstB > firstA) {\n          comparison = 1;\n      } else {\n          comparison = -1;\n      }\n      return comparison;\n  }\n  // Check to see the current state to sort \n  if (this.state.isSorted) {\n      this.state.filteredEmployees.sort(compareAZ);\n      this.setState({\n          isSorted: false\n      })\n  } else {\n      this.state.filteredEmployees.sort(compareAZ);\n      this.setState({\n          isSorted: true\n      })\n  }\n    this.setState({ filteredEmployees: this.state.filteredEmployees });\n  }\n\n  // Declare a function that handles the sort by last name\n  handleSortLast = () => {\n    //Sort A-Z\n    function compareAZ(a, b) {\n      const lastA = a.name.last.toLowerCase();\n      const lastB = b.name.last.toLowerCase();\n      let comparison = 0;\n      if (lastA > lastB) {\n        comparison = 1;\n      } else if (lastA < lastB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n    //Sort Z-A\n    function compareZA(a, b) {\n      const lastA = a.name.last.toLowerCase();\n      const lastB = b.name.last.toLowerCase();\n      let comparison = 0;\n      if (lastB > lastA) {\n        comparison = 1;\n      } else {\n        comparison = -1;\n      }\n      return comparison;\n    }\n    // Check to see the current state to sort \n    if (this.state.isSorted) {\n      this.state.filteredEmployees.sort(compareZA);\n      this.setState({\n        isSorted: false\n      })\n    } else {\n      this.state.filteredEmployees.sort(compareAZ);\n      this.setState({\n        isSorted: true\n      })\n    }\n\n    this.setState({ filteredEmployees: this.state.filteredEmployees });\n  }\n\n  handleSortLocation = () => {\n    //function A-Z\n    function compareAZ(a, b) {\n      const locA = a.location.state.toLowerCase();\n      const locB = b.location.state.toLowerCase();\n      let comparison = 0;\n      if (locA > locB) {\n        comparison = 1;\n      } else if (locA < locB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n    //function Z-A\n    function compareZA(a, b) {\n      const locA = a.location.state.toLowerCase();\n      const locB = b.location.state.toLowerCase();\n      let comparison = 0;\n      if (locA > locB) {\n        comparison = 1;\n      } else if (locA < locB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n    // Check to see the current state to sort \n    if (this.state.isSorted) {\n      this.state.filteredEmployees.sort(compareZA);\n      this.setState({\n        isSorted: false\n      })\n    } else {\n      this.state.filteredEmployees.sort(compareAZ);\n      this.setState({\n        isSorted: true\n      })\n    }\n    this.setState({ filteredEmployees: this.state.filteredEmployees });\n\n  }\n\n  render(){\n     // A variable that stores the result from the map method\n     const employeeInfo = this.state.filteredEmployees.map((employee, i) => {\n      return (\n        <Results\n          key={i}\n          image={employee.picture.thumbnail}\n          first={employee.name.first}\n          last={employee.name.last}\n          email={employee.email}\n          phone={employee.phone}\n          location={employee.location.state}\n        />\n      )\n  })\n\n    return (\n      <Container>\n        <Hero handleInput={this.handleInput}\n        value={this.state.search}/>\n        <div className={\"container-fluid\"}>\n          <div className={\"table-responsive\"}>\n            <table className=\"table\">\n              <thead className=\"thead-light\">\n                <tr>\n                  <th>Image</th>\n                  <th>First Name<i onClick={this.handleSortFirst} className={\"fa fa-fw fa-sort\"}></i></th>\n                  <th scope=\"col\">Last Name<i onClick={this.handleSortLast} className={\"fa fa-fw fa-sort\"}></i></th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">Phone</th>\n                  <th scope=\"col\">Location<i onClick={this.handleSortLocation} className={\"fa fa-fw fa-sort\"}></i></th>\n                </tr>\n              </thead>\n              {employeeInfo}\n            </table>\n          </div>\n        </div>\n      </Container>   \n    )\n  };\n};\n\nexport default Directory;","import React from \"react\";\r\nimport Directory from \"./components/DirectoryPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Directory />\r\n  )\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}