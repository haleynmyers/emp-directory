{"version":3,"sources":["utilities/API.js","components/Container.js","components/Hero.js","components/SearchForm.js","components/Results.js","components/DirectoryPage.js","App.js","index.js"],"names":["axios","get","Container","props","className","fluid","children","Hero","style","backgroundImage","SearchForm","htmlFor","value","search","onChange","handleInputChange","name","list","type","placeholder","id","Results","src","image","alt","first","last","email","phone","location","Directory","state","employees","filteredEmployees","isSorted","handleInput","event","preventDefault","target","toLowerCase","setState","filtered","filter","emp","trim","includes","handleSortFirst","sort","a","b","firstA","handleSortLast","lastA","lastB","comparison","handleSortLocation","locA","locB","API","then","res","console","log","data","results","filterEmployees","catch","err","employeeInfo","this","map","employee","i","key","picture","thumbnail","onClick","scope","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9df7f27.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Export a method that gets employees from the User API\r\nexport default {\r\n  getEmployees() {\r\n    return axios.get(\"https://randomuser.me/api/?results=10&nat=us\");\r\n  }\r\n};","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n}\n\nexport default Container;\n","import React from \"react\";\r\n\r\nfunction Hero(props) {\r\n  return (\r\n    <div className=\"hero text-center\" style={{ backgroundImage: \"url(https://www.pexels.com/photo/woman-sitting-on-the-chair-using-laptop-2041629/)\" }}>\r\n      <h1>Employee Directory</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hero;\r\n","import React from \"react\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"language\">Search:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"term\"\n          list=\"term\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in a name to search\"\n          id=\"term\"\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\r\n\r\nfunction Results(props) {\r\n  return(\r\n    <tbody>\r\n      <tr>\r\n        <td><img src={props.image} alt={props.first}></img></td>\r\n        <td>{props.first}</td>\r\n        <td>{props.last}</td>\r\n        <td>{props.email}</td>\r\n        <td>{props.phone}</td>\r\n        <td>{props.location}</td>\r\n      </tr>\r\n    </tbody>\r\n    );\r\n}\r\n\r\nexport default Results;","import React, { Component } from \"react\";\r\nimport API from \"../utilities/API\";\r\nimport Container from \"./Container\";\r\nimport Hero from \"./Hero\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport Results from \"./Results\";\r\n\r\nclass Directory extends Component{\r\n  //inititalize state\r\n  state = {\r\n    employees: [],\r\n    search: \"\",\r\n    filteredEmployees: [],\r\n    isSorted: false\r\n  }\r\n\r\n  //gets data from API when the page loads\r\n  componentDidMount() {\r\n    API.getEmployees()\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({ \r\n          employees: res.data.results, \r\n          filteredEmployees: res.data.results \r\n        });\r\n        this.filterEmployees();\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // input change in search bar\r\n  handleInput = (event) => {\r\n    event.preventDefault();\r\n    const value = event.target.value.toLowerCase();\r\n    this.setState({ \r\n      search: event.target.value,\r\n      //filters employee array by searched term\r\n      filtered: this.state.employees.filter(emp => {\r\n        const name = emp.first.toLowerCase().trim() + emp.last.toLowerCase().trim();\r\n        return (name.includes(value));\r\n      })\r\n     });\r\n  }\r\n\r\n  // Declare a function that handle the sort by first name\r\n  handleSortFirst = () => {\r\n    //sort A-Z\r\n    function compareAZ(a, b) {\r\n      const firstA = a.name.first.toLowerCase();\r\n      const firstB = b.name.first.toLowerCase();\r\n      let comparison = 0;\r\n      if (firstA > firstB) {\r\n        comparison = 1;\r\n      } else {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    }\r\n    //sortZ-A\r\n    function compareZA(a, b) {\r\n      const firstA = a.name.first.toLowerCase();\r\n      const firstB = b.name.first.toLowerCase();\r\n      let comparison = 0;\r\n      if (firstB > firstA) {\r\n          comparison = 1;\r\n      } else {\r\n          comparison = -1;\r\n      }\r\n      return comparison;\r\n  }\r\n  // Check to see the current state to sort \r\n  if (this.state.isSorted) {\r\n      this.state.filteredEmployees.sort(compareZA);\r\n      this.setState({\r\n          isSorted: false\r\n      })\r\n  } else {\r\n      this.state.filteredEmployees.sort(compareAZ);\r\n      this.setState({\r\n          isSorted: true\r\n      })\r\n  }\r\n    this.setState({ filteredEmployees: this.state.filteredEmployees });\r\n  }\r\n\r\n  // Declare a function that handles the sort by last name\r\n  handleSortLast = () => {\r\n    //Sort A-Z\r\n    function compareAZ(a, b) {\r\n      const lastA = a.name.last.toLowerCase();\r\n      const lastB = b.name.last.toLowerCase();\r\n      let comparison = 0;\r\n      if (lastA > lastB) {\r\n        comparison = 1;\r\n      } else if (lastA < lastB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    }\r\n    //Sort Z-A\r\n    function compareZA(a, b) {\r\n      const lastA = a.name.last.toLowerCase();\r\n      const lastB = b.name.last.toLowerCase();\r\n      let comparison = 0;\r\n      if (lastB > lastA) {\r\n        comparison = 1;\r\n      } else {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    }\r\n    // Check to see the current state to sort \r\n    if (this.state.isSorted) {\r\n      this.state.filteredEmployees.sort(compareZA);\r\n      this.setState({\r\n        isSorted: false\r\n      })\r\n    } else {\r\n      this.state.filteredEmployees.sort(compareAZ);\r\n      this.setState({\r\n        isSorted: true\r\n      })\r\n    }\r\n\r\n    this.setState({ filteredEmployees: this.state.filteredEmployees });\r\n  }\r\n\r\n  handleSortLocation = () => {\r\n    //function A-Z\r\n    function compareAZ(a, b) {\r\n      const locA = a.location.state.toLowerCase();\r\n      const locB = b.location.state.toLowerCase();\r\n      let comparison = 0;\r\n      if (locA > locB) {\r\n        comparison = 1;\r\n      } else if (locA < locB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    }\r\n    //function Z-A\r\n    function compareZA(a, b) {\r\n      const locA = a.location.state.toLowerCase();\r\n      const locB = b.location.state.toLowerCase();\r\n      let comparison = 0;\r\n      if (locA > locB) {\r\n        comparison = 1;\r\n      } else if (locA < locB) {\r\n        comparison = -1;\r\n      }\r\n      return comparison;\r\n    }\r\n    // Check to see the current state to sort \r\n    if (this.state.isSorted) {\r\n      this.state.filteredEmployees.sort(compareZA);\r\n      this.setState({\r\n        isSorted: false\r\n      })\r\n    } else {\r\n      this.state.filteredEmployees.sort(compareAZ);\r\n      this.setState({\r\n        isSorted: true\r\n      })\r\n    }\r\n    this.setState({ filteredEmployees: this.state.filteredEmployees });\r\n\r\n  }\r\n\r\n  render(){\r\n     // A variable that stores the result from the map method\r\n     const employeeInfo = this.state.filteredEmployees.map((employee, i) => {\r\n      return (\r\n        <Results\r\n          key={i}\r\n          image={employee.picture.thumbnail}\r\n          first={employee.name.first}\r\n          last={employee.name.last}\r\n          email={employee.email}\r\n          phone={employee.phone}\r\n          location={employee.location.state}\r\n        />\r\n      )\r\n  })\r\n\r\n    return (\r\n      <Container>\r\n        <Hero/>\r\n        <SearchForm handleInput={this.handleInput}\r\n        value={this.state.search} />\r\n        <div className={\"container-fluid\"}>\r\n          <div className={\"table-responsive\"}>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Image</th>\r\n                  <th>First Name<i onClick={this.handleSortFirst} className={\"fa fa-fw fa-sort\"}></i></th>\r\n                  <th scope=\"col\">Last Name<i onClick={this.handleSortLast} className={\"fa fa-fw fa-sort\"}></i></th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Phone</th>\r\n                  <th scope=\"col\">Location<i onClick={this.handleSortLocation} className={\"fa fa-fw fa-sort\"}></i></th>\r\n                </tr>\r\n              </thead>\r\n              {employeeInfo}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </Container>   \r\n    )\r\n  };\r\n};\r\n\r\nexport default Directory;","import React from \"react\";\r\nimport Directory from \"./components/DirectoryPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Directory />\r\n  )\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}